// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base/base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from base/base.proto</summary>
public static partial class BaseReflection {

  #region Descriptor
  /// <summary>File descriptor for base/base.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BaseReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg9iYXNlL2Jhc2UucHJvdG8iIQoEVGVzdBILCgNzZXEYASABKAkSDAoEYm9k",
          "eRgCIAEoDCK8AQoHUmVxQm9keRIOCgZyb29tSWQYASABKAkSEAoIcGxheWVy",
          "SWQYAiABKAkSIwoMZW50ZXJSb29tUmVxGAMgASgLMg0uRW50ZXJSb29tUmVx",
          "EiMKDGxlYXZlUm9vbVJlcRgEIAEoCzINLkxlYXZlUm9vbVJlcRInCg5yb29t",
          "TWVzc2FnZVJlcRgFIAEoCzIPLlJvb21NZXNzYWdlUmVxEhwKDHNlbmRmcmFt",
          "ZVJlcRgGIAEoCzIGLkZyYW1lIisKCFBvc2l0aW9uEgkKAXgYASABKAISCQoB",
          "eRgCIAEoAhIJCgF6GAMgASgCIjYKBUZyYW1lEhAKCHBsYXllcklkGAEgASgJ",
          "EhsKCHBvc2l0aW9uGAIgASgLMgkuUG9zaXRpb24iDgoMRW50ZXJSb29tUmVx",
          "Ig4KDExlYXZlUm9vbVJlcSIrCg5Sb29tTWVzc2FnZVJlcRIZCgdtc2dUeXBl",
          "GAEgASgOMgguTXNnVHlwZSJaChBDbGllbnQyU2VydmVyUmVxEiEKA2NtZBgB",
          "IAEoDjIULkNsaWVudDJTZXJ2ZXJSZXFDbWQSCwoDc2VxGAIgASgJEhYKBGJv",
          "ZHkYAyABKAsyCC5SZXFCb2R5Ik4KCFJvb21JbmZvEg4KBnJvb21JZBgBIAEo",
          "CRIWCg5tYXhQbGF5ZXJDb3VudBgCIAEoBRIaChJjdXJyZW50UGxheWVyQ291",
          "bnQYAyABKAUiKwoMRW50ZXJSb29tUnNwEhsKCHJvb21JbmZvGAEgASgLMgku",
          "Um9vbUluZm8iDgoMTGVhdmVSb29tUnNwIisKDlJvb21NZXNzYWdlUnNwEhkK",
          "B21zZ1R5cGUYASABKA4yCC5Nc2dUeXBlIp4BCgdSc3BCb2R5Eg4KBnJvb21J",
          "ZBgBIAEoCRIQCghwbGF5ZXJJZBgCIAEoCRIjCgxlbnRlclJvb21Sc3AYAyAB",
          "KAsyDS5FbnRlclJvb21Sc3ASIwoMbGVhdmVSb29tUnNwGAQgASgLMg0uTGVh",
          "dmVSb29tUnNwEicKDnJvb21NZXNzYWdlUnNwGAUgASgLMg8uUm9vbU1lc3Nh",
          "Z2VSc3AidQoQU2VydmVyMkNsaWVudFJzcBILCgNzZXEYASABKAkSIQoDY21k",
          "GAIgASgOMhQuQ2xpZW50MlNlcnZlclJlcUNtZBIMCgRjb2RlGAMgASgFEgsK",
          "A21zZxgEIAEoCRIWCgRib2R5GAUgASgLMgguUnNwQm9keSIgCgZGcmFtZXMS",
          "FgoGZnJhbWVzGAEgAygLMgYuRnJhbWUiOAoHQnN0Qm9keRIUCgxmcm9tUGxh",
          "eWVySWQYASABKAkSFwoGZnJhbWVzGAIgASgLMgcuRnJhbWVzIlwKEFNlcnZl",
          "cjJDbGllbnRCc3QSIwoEdHlwZRgBIAEoDjIVLlNlcnZlcjJDbGllbnRCc3RU",
          "eXBlEgsKA3NlcRgCIAEoCRIWCgRib2R5GAMgASgLMgguQnN0Qm9keSo0CgdN",
          "c2dUeXBlEhUKEUVfTVNHVFlQRV9JTlZBTElEEAASEgoORV9NU0dUWVBFX0NI",
          "QVQQASqcAQoTQ2xpZW50MlNlcnZlclJlcUNtZBIRCg1FX0NNRF9JTlZBTElE",
          "EAASFAoQRV9DTURfSEVBUlRfQkVBVBAKEhUKEEVfQ01EX1JPT01fRU5URVIQ",
          "0A8SFQoQRV9DTURfUk9PTV9MRUFWRRDRDxIXChJFX0NNRF9ST09NX01FU1NB",
          "R0UQ0g8SFQoQRV9DTURfUk9PTV9GUkFNRRDTDyqkAQoUU2VydmVyMkNsaWVu",
          "dEJzdFR5cGUSDwoLRV9QVVNIX1RFU1QQABIWChFFX1BVU0hfUk9PTV9FTlRF",
          "UhDIARIWChFFX1BVU0hfUk9PTV9MRUFWRRDJARIYChNFX1BVU0hfUk9PTV9N",
          "RVNTQUdFEMoBEhgKE0VfUFVTSF9ST09NX0NPTk5FQ1QQywESFwoSRV9QVVNI",
          "X1JPT01fRlJBTUVTEMwBQhVaE3JpYmluLXByb3RvY29sL2Jhc2ViBnByb3Rv",
          "Mw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MsgType), typeof(global::Client2ServerReqCmd), typeof(global::Server2ClientBstType), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Test), global::Test.Parser, new[]{ "Seq", "Body" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ReqBody), global::ReqBody.Parser, new[]{ "RoomId", "PlayerId", "EnterRoomReq", "LeaveRoomReq", "RoomMessageReq", "SendframeReq" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Position), global::Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Frame), global::Frame.Parser, new[]{ "PlayerId", "Position" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnterRoomReq), global::EnterRoomReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LeaveRoomReq), global::LeaveRoomReq.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoomMessageReq), global::RoomMessageReq.Parser, new[]{ "MsgType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Client2ServerReq), global::Client2ServerReq.Parser, new[]{ "Cmd", "Seq", "Body" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoomInfo), global::RoomInfo.Parser, new[]{ "RoomId", "MaxPlayerCount", "CurrentPlayerCount" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EnterRoomRsp), global::EnterRoomRsp.Parser, new[]{ "RoomInfo" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LeaveRoomRsp), global::LeaveRoomRsp.Parser, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RoomMessageRsp), global::RoomMessageRsp.Parser, new[]{ "MsgType" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RspBody), global::RspBody.Parser, new[]{ "RoomId", "PlayerId", "EnterRoomRsp", "LeaveRoomRsp", "RoomMessageRsp" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Server2ClientRsp), global::Server2ClientRsp.Parser, new[]{ "Seq", "Cmd", "Code", "Msg", "Body" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Frames), global::Frames.Parser, new[]{ "Frames_" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BstBody), global::BstBody.Parser, new[]{ "FromPlayerId", "Frames" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Server2ClientBst), global::Server2ClientBst.Parser, new[]{ "Type", "Seq", "Body" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
/// <summary>
/// Request
/// </summary>
public enum MsgType {
  [pbr::OriginalName("E_MSGTYPE_INVALID")] EMsgtypeInvalid = 0,
  [pbr::OriginalName("E_MSGTYPE_CHAT")] EMsgtypeChat = 1,
}

public enum Client2ServerReqCmd {
  [pbr::OriginalName("E_CMD_INVALID")] ECmdInvalid = 0,
  [pbr::OriginalName("E_CMD_HEART_BEAT")] ECmdHeartBeat = 10,
  [pbr::OriginalName("E_CMD_ROOM_ENTER")] ECmdRoomEnter = 2000,
  [pbr::OriginalName("E_CMD_ROOM_LEAVE")] ECmdRoomLeave = 2001,
  [pbr::OriginalName("E_CMD_ROOM_MESSAGE")] ECmdRoomMessage = 2002,
  [pbr::OriginalName("E_CMD_ROOM_FRAME")] ECmdRoomFrame = 2003,
}

public enum Server2ClientBstType {
  [pbr::OriginalName("E_PUSH_TEST")] EPushTest = 0,
  [pbr::OriginalName("E_PUSH_ROOM_ENTER")] EPushRoomEnter = 200,
  [pbr::OriginalName("E_PUSH_ROOM_LEAVE")] EPushRoomLeave = 201,
  [pbr::OriginalName("E_PUSH_ROOM_MESSAGE")] EPushRoomMessage = 202,
  [pbr::OriginalName("E_PUSH_ROOM_CONNECT")] EPushRoomConnect = 203,
  [pbr::OriginalName("E_PUSH_ROOM_FRAMES")] EPushRoomFrames = 204,
}

#endregion

#region Messages
public sealed partial class Test : pb::IMessage<Test> {
  private static readonly pb::MessageParser<Test> _parser = new pb::MessageParser<Test>(() => new Test());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Test> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Test() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Test(Test other) : this() {
    seq_ = other.seq_;
    body_ = other.body_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Test Clone() {
    return new Test(this);
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 1;
  private string seq_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Seq {
    get { return seq_; }
    set {
      seq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 2;
  private pb::ByteString body_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Body {
    get { return body_; }
    set {
      body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Test);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Test other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Seq != other.Seq) return false;
    if (Body != other.Body) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Seq.Length != 0) hash ^= Seq.GetHashCode();
    if (Body.Length != 0) hash ^= Body.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Seq.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Seq);
    }
    if (Body.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Body);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Seq.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Seq);
    }
    if (Body.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Test other) {
    if (other == null) {
      return;
    }
    if (other.Seq.Length != 0) {
      Seq = other.Seq;
    }
    if (other.Body.Length != 0) {
      Body = other.Body;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Seq = input.ReadString();
          break;
        }
        case 18: {
          Body = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class ReqBody : pb::IMessage<ReqBody> {
  private static readonly pb::MessageParser<ReqBody> _parser = new pb::MessageParser<ReqBody>(() => new ReqBody());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ReqBody> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqBody() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqBody(ReqBody other) : this() {
    roomId_ = other.roomId_;
    playerId_ = other.playerId_;
    enterRoomReq_ = other.enterRoomReq_ != null ? other.enterRoomReq_.Clone() : null;
    leaveRoomReq_ = other.leaveRoomReq_ != null ? other.leaveRoomReq_.Clone() : null;
    roomMessageReq_ = other.roomMessageReq_ != null ? other.roomMessageReq_.Clone() : null;
    sendframeReq_ = other.sendframeReq_ != null ? other.sendframeReq_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ReqBody Clone() {
    return new ReqBody(this);
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "playerId" field.</summary>
  public const int PlayerIdFieldNumber = 2;
  private string playerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PlayerId {
    get { return playerId_; }
    set {
      playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "enterRoomReq" field.</summary>
  public const int EnterRoomReqFieldNumber = 3;
  private global::EnterRoomReq enterRoomReq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnterRoomReq EnterRoomReq {
    get { return enterRoomReq_; }
    set {
      enterRoomReq_ = value;
    }
  }

  /// <summary>Field number for the "leaveRoomReq" field.</summary>
  public const int LeaveRoomReqFieldNumber = 4;
  private global::LeaveRoomReq leaveRoomReq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LeaveRoomReq LeaveRoomReq {
    get { return leaveRoomReq_; }
    set {
      leaveRoomReq_ = value;
    }
  }

  /// <summary>Field number for the "roomMessageReq" field.</summary>
  public const int RoomMessageReqFieldNumber = 5;
  private global::RoomMessageReq roomMessageReq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoomMessageReq RoomMessageReq {
    get { return roomMessageReq_; }
    set {
      roomMessageReq_ = value;
    }
  }

  /// <summary>Field number for the "sendframeReq" field.</summary>
  public const int SendframeReqFieldNumber = 6;
  private global::Frame sendframeReq_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Frame SendframeReq {
    get { return sendframeReq_; }
    set {
      sendframeReq_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ReqBody);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ReqBody other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    if (PlayerId != other.PlayerId) return false;
    if (!object.Equals(EnterRoomReq, other.EnterRoomReq)) return false;
    if (!object.Equals(LeaveRoomReq, other.LeaveRoomReq)) return false;
    if (!object.Equals(RoomMessageReq, other.RoomMessageReq)) return false;
    if (!object.Equals(SendframeReq, other.SendframeReq)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
    if (enterRoomReq_ != null) hash ^= EnterRoomReq.GetHashCode();
    if (leaveRoomReq_ != null) hash ^= LeaveRoomReq.GetHashCode();
    if (roomMessageReq_ != null) hash ^= RoomMessageReq.GetHashCode();
    if (sendframeReq_ != null) hash ^= SendframeReq.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoomId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoomId);
    }
    if (PlayerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PlayerId);
    }
    if (enterRoomReq_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EnterRoomReq);
    }
    if (leaveRoomReq_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(LeaveRoomReq);
    }
    if (roomMessageReq_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(RoomMessageReq);
    }
    if (sendframeReq_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(SendframeReq);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (PlayerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
    }
    if (enterRoomReq_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnterRoomReq);
    }
    if (leaveRoomReq_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveRoomReq);
    }
    if (roomMessageReq_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomMessageReq);
    }
    if (sendframeReq_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendframeReq);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ReqBody other) {
    if (other == null) {
      return;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.PlayerId.Length != 0) {
      PlayerId = other.PlayerId;
    }
    if (other.enterRoomReq_ != null) {
      if (enterRoomReq_ == null) {
        enterRoomReq_ = new global::EnterRoomReq();
      }
      EnterRoomReq.MergeFrom(other.EnterRoomReq);
    }
    if (other.leaveRoomReq_ != null) {
      if (leaveRoomReq_ == null) {
        leaveRoomReq_ = new global::LeaveRoomReq();
      }
      LeaveRoomReq.MergeFrom(other.LeaveRoomReq);
    }
    if (other.roomMessageReq_ != null) {
      if (roomMessageReq_ == null) {
        roomMessageReq_ = new global::RoomMessageReq();
      }
      RoomMessageReq.MergeFrom(other.RoomMessageReq);
    }
    if (other.sendframeReq_ != null) {
      if (sendframeReq_ == null) {
        sendframeReq_ = new global::Frame();
      }
      SendframeReq.MergeFrom(other.SendframeReq);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoomId = input.ReadString();
          break;
        }
        case 18: {
          PlayerId = input.ReadString();
          break;
        }
        case 26: {
          if (enterRoomReq_ == null) {
            enterRoomReq_ = new global::EnterRoomReq();
          }
          input.ReadMessage(enterRoomReq_);
          break;
        }
        case 34: {
          if (leaveRoomReq_ == null) {
            leaveRoomReq_ = new global::LeaveRoomReq();
          }
          input.ReadMessage(leaveRoomReq_);
          break;
        }
        case 42: {
          if (roomMessageReq_ == null) {
            roomMessageReq_ = new global::RoomMessageReq();
          }
          input.ReadMessage(roomMessageReq_);
          break;
        }
        case 50: {
          if (sendframeReq_ == null) {
            sendframeReq_ = new global::Frame();
          }
          input.ReadMessage(sendframeReq_);
          break;
        }
      }
    }
  }

}

public sealed partial class Position : pb::IMessage<Position> {
  private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Position> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position(Position other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Position Clone() {
    return new Position(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Position);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Position other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (Y != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Y != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Position other) {
    if (other == null) {
      return;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Y != 0F) {
      Y = other.Y;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class Frame : pb::IMessage<Frame> {
  private static readonly pb::MessageParser<Frame> _parser = new pb::MessageParser<Frame>(() => new Frame());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Frame> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frame() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frame(Frame other) : this() {
    playerId_ = other.playerId_;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frame Clone() {
    return new Frame(this);
  }

  /// <summary>Field number for the "playerId" field.</summary>
  public const int PlayerIdFieldNumber = 1;
  private string playerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PlayerId {
    get { return playerId_; }
    set {
      playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 2;
  private global::Position position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Position Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Frame);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Frame other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerId != other.PlayerId) return false;
    if (!object.Equals(Position, other.Position)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
    if (position_ != null) hash ^= Position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (PlayerId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(PlayerId);
    }
    if (position_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (PlayerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
    }
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Frame other) {
    if (other == null) {
      return;
    }
    if (other.PlayerId.Length != 0) {
      PlayerId = other.PlayerId;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        position_ = new global::Position();
      }
      Position.MergeFrom(other.Position);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          PlayerId = input.ReadString();
          break;
        }
        case 18: {
          if (position_ == null) {
            position_ = new global::Position();
          }
          input.ReadMessage(position_);
          break;
        }
      }
    }
  }

}

public sealed partial class EnterRoomReq : pb::IMessage<EnterRoomReq> {
  private static readonly pb::MessageParser<EnterRoomReq> _parser = new pb::MessageParser<EnterRoomReq>(() => new EnterRoomReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnterRoomReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomReq(EnterRoomReq other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomReq Clone() {
    return new EnterRoomReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnterRoomReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnterRoomReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnterRoomReq other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class LeaveRoomReq : pb::IMessage<LeaveRoomReq> {
  private static readonly pb::MessageParser<LeaveRoomReq> _parser = new pb::MessageParser<LeaveRoomReq>(() => new LeaveRoomReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LeaveRoomReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomReq(LeaveRoomReq other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomReq Clone() {
    return new LeaveRoomReq(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LeaveRoomReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LeaveRoomReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LeaveRoomReq other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class RoomMessageReq : pb::IMessage<RoomMessageReq> {
  private static readonly pb::MessageParser<RoomMessageReq> _parser = new pb::MessageParser<RoomMessageReq>(() => new RoomMessageReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoomMessageReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageReq(RoomMessageReq other) : this() {
    msgType_ = other.msgType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageReq Clone() {
    return new RoomMessageReq(this);
  }

  /// <summary>Field number for the "msgType" field.</summary>
  public const int MsgTypeFieldNumber = 1;
  private global::MsgType msgType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgType MsgType {
    get { return msgType_; }
    set {
      msgType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoomMessageReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoomMessageReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MsgType != other.MsgType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MsgType != 0) hash ^= MsgType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MsgType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) MsgType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MsgType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoomMessageReq other) {
    if (other == null) {
      return;
    }
    if (other.MsgType != 0) {
      MsgType = other.MsgType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          msgType_ = (global::MsgType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class Client2ServerReq : pb::IMessage<Client2ServerReq> {
  private static readonly pb::MessageParser<Client2ServerReq> _parser = new pb::MessageParser<Client2ServerReq>(() => new Client2ServerReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Client2ServerReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Client2ServerReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Client2ServerReq(Client2ServerReq other) : this() {
    cmd_ = other.cmd_;
    seq_ = other.seq_;
    body_ = other.body_ != null ? other.body_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Client2ServerReq Clone() {
    return new Client2ServerReq(this);
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 1;
  private global::Client2ServerReqCmd cmd_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Client2ServerReqCmd Cmd {
    get { return cmd_; }
    set {
      cmd_ = value;
    }
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 2;
  private string seq_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Seq {
    get { return seq_; }
    set {
      seq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 3;
  private global::ReqBody body_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ReqBody Body {
    get { return body_; }
    set {
      body_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Client2ServerReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Client2ServerReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cmd != other.Cmd) return false;
    if (Seq != other.Seq) return false;
    if (!object.Equals(Body, other.Body)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Cmd != 0) hash ^= Cmd.GetHashCode();
    if (Seq.Length != 0) hash ^= Seq.GetHashCode();
    if (body_ != null) hash ^= Body.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Cmd != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Cmd);
    }
    if (Seq.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Seq);
    }
    if (body_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Body);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Cmd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cmd);
    }
    if (Seq.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Seq);
    }
    if (body_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Client2ServerReq other) {
    if (other == null) {
      return;
    }
    if (other.Cmd != 0) {
      Cmd = other.Cmd;
    }
    if (other.Seq.Length != 0) {
      Seq = other.Seq;
    }
    if (other.body_ != null) {
      if (body_ == null) {
        body_ = new global::ReqBody();
      }
      Body.MergeFrom(other.Body);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          cmd_ = (global::Client2ServerReqCmd) input.ReadEnum();
          break;
        }
        case 18: {
          Seq = input.ReadString();
          break;
        }
        case 26: {
          if (body_ == null) {
            body_ = new global::ReqBody();
          }
          input.ReadMessage(body_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Response
/// </summary>
public sealed partial class RoomInfo : pb::IMessage<RoomInfo> {
  private static readonly pb::MessageParser<RoomInfo> _parser = new pb::MessageParser<RoomInfo>(() => new RoomInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoomInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo(RoomInfo other) : this() {
    roomId_ = other.roomId_;
    maxPlayerCount_ = other.maxPlayerCount_;
    currentPlayerCount_ = other.currentPlayerCount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomInfo Clone() {
    return new RoomInfo(this);
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "maxPlayerCount" field.</summary>
  public const int MaxPlayerCountFieldNumber = 2;
  private int maxPlayerCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int MaxPlayerCount {
    get { return maxPlayerCount_; }
    set {
      maxPlayerCount_ = value;
    }
  }

  /// <summary>Field number for the "currentPlayerCount" field.</summary>
  public const int CurrentPlayerCountFieldNumber = 3;
  private int currentPlayerCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CurrentPlayerCount {
    get { return currentPlayerCount_; }
    set {
      currentPlayerCount_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoomInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoomInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    if (MaxPlayerCount != other.MaxPlayerCount) return false;
    if (CurrentPlayerCount != other.CurrentPlayerCount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (MaxPlayerCount != 0) hash ^= MaxPlayerCount.GetHashCode();
    if (CurrentPlayerCount != 0) hash ^= CurrentPlayerCount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoomId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoomId);
    }
    if (MaxPlayerCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(MaxPlayerCount);
    }
    if (CurrentPlayerCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(CurrentPlayerCount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (MaxPlayerCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPlayerCount);
    }
    if (CurrentPlayerCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPlayerCount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoomInfo other) {
    if (other == null) {
      return;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.MaxPlayerCount != 0) {
      MaxPlayerCount = other.MaxPlayerCount;
    }
    if (other.CurrentPlayerCount != 0) {
      CurrentPlayerCount = other.CurrentPlayerCount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoomId = input.ReadString();
          break;
        }
        case 16: {
          MaxPlayerCount = input.ReadInt32();
          break;
        }
        case 24: {
          CurrentPlayerCount = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class EnterRoomRsp : pb::IMessage<EnterRoomRsp> {
  private static readonly pb::MessageParser<EnterRoomRsp> _parser = new pb::MessageParser<EnterRoomRsp>(() => new EnterRoomRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EnterRoomRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomRsp(EnterRoomRsp other) : this() {
    roomInfo_ = other.roomInfo_ != null ? other.roomInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EnterRoomRsp Clone() {
    return new EnterRoomRsp(this);
  }

  /// <summary>Field number for the "roomInfo" field.</summary>
  public const int RoomInfoFieldNumber = 1;
  private global::RoomInfo roomInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoomInfo RoomInfo {
    get { return roomInfo_; }
    set {
      roomInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EnterRoomRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EnterRoomRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(RoomInfo, other.RoomInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (roomInfo_ != null) hash ^= RoomInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (roomInfo_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(RoomInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (roomInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EnterRoomRsp other) {
    if (other == null) {
      return;
    }
    if (other.roomInfo_ != null) {
      if (roomInfo_ == null) {
        roomInfo_ = new global::RoomInfo();
      }
      RoomInfo.MergeFrom(other.RoomInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (roomInfo_ == null) {
            roomInfo_ = new global::RoomInfo();
          }
          input.ReadMessage(roomInfo_);
          break;
        }
      }
    }
  }

}

public sealed partial class LeaveRoomRsp : pb::IMessage<LeaveRoomRsp> {
  private static readonly pb::MessageParser<LeaveRoomRsp> _parser = new pb::MessageParser<LeaveRoomRsp>(() => new LeaveRoomRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LeaveRoomRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomRsp(LeaveRoomRsp other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LeaveRoomRsp Clone() {
    return new LeaveRoomRsp(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LeaveRoomRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LeaveRoomRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LeaveRoomRsp other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  }

}

public sealed partial class RoomMessageRsp : pb::IMessage<RoomMessageRsp> {
  private static readonly pb::MessageParser<RoomMessageRsp> _parser = new pb::MessageParser<RoomMessageRsp>(() => new RoomMessageRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RoomMessageRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageRsp(RoomMessageRsp other) : this() {
    msgType_ = other.msgType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RoomMessageRsp Clone() {
    return new RoomMessageRsp(this);
  }

  /// <summary>Field number for the "msgType" field.</summary>
  public const int MsgTypeFieldNumber = 1;
  private global::MsgType msgType_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::MsgType MsgType {
    get { return msgType_; }
    set {
      msgType_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RoomMessageRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RoomMessageRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MsgType != other.MsgType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MsgType != 0) hash ^= MsgType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (MsgType != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) MsgType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MsgType != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RoomMessageRsp other) {
    if (other == null) {
      return;
    }
    if (other.MsgType != 0) {
      MsgType = other.MsgType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          msgType_ = (global::MsgType) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class RspBody : pb::IMessage<RspBody> {
  private static readonly pb::MessageParser<RspBody> _parser = new pb::MessageParser<RspBody>(() => new RspBody());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RspBody> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspBody() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspBody(RspBody other) : this() {
    roomId_ = other.roomId_;
    playerId_ = other.playerId_;
    enterRoomRsp_ = other.enterRoomRsp_ != null ? other.enterRoomRsp_.Clone() : null;
    leaveRoomRsp_ = other.leaveRoomRsp_ != null ? other.leaveRoomRsp_.Clone() : null;
    roomMessageRsp_ = other.roomMessageRsp_ != null ? other.roomMessageRsp_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RspBody Clone() {
    return new RspBody(this);
  }

  /// <summary>Field number for the "roomId" field.</summary>
  public const int RoomIdFieldNumber = 1;
  private string roomId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string RoomId {
    get { return roomId_; }
    set {
      roomId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "playerId" field.</summary>
  public const int PlayerIdFieldNumber = 2;
  private string playerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string PlayerId {
    get { return playerId_; }
    set {
      playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "enterRoomRsp" field.</summary>
  public const int EnterRoomRspFieldNumber = 3;
  private global::EnterRoomRsp enterRoomRsp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnterRoomRsp EnterRoomRsp {
    get { return enterRoomRsp_; }
    set {
      enterRoomRsp_ = value;
    }
  }

  /// <summary>Field number for the "leaveRoomRsp" field.</summary>
  public const int LeaveRoomRspFieldNumber = 4;
  private global::LeaveRoomRsp leaveRoomRsp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LeaveRoomRsp LeaveRoomRsp {
    get { return leaveRoomRsp_; }
    set {
      leaveRoomRsp_ = value;
    }
  }

  /// <summary>Field number for the "roomMessageRsp" field.</summary>
  public const int RoomMessageRspFieldNumber = 5;
  private global::RoomMessageRsp roomMessageRsp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RoomMessageRsp RoomMessageRsp {
    get { return roomMessageRsp_; }
    set {
      roomMessageRsp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RspBody);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RspBody other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RoomId != other.RoomId) return false;
    if (PlayerId != other.PlayerId) return false;
    if (!object.Equals(EnterRoomRsp, other.EnterRoomRsp)) return false;
    if (!object.Equals(LeaveRoomRsp, other.LeaveRoomRsp)) return false;
    if (!object.Equals(RoomMessageRsp, other.RoomMessageRsp)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RoomId.Length != 0) hash ^= RoomId.GetHashCode();
    if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
    if (enterRoomRsp_ != null) hash ^= EnterRoomRsp.GetHashCode();
    if (leaveRoomRsp_ != null) hash ^= LeaveRoomRsp.GetHashCode();
    if (roomMessageRsp_ != null) hash ^= RoomMessageRsp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RoomId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(RoomId);
    }
    if (PlayerId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(PlayerId);
    }
    if (enterRoomRsp_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(EnterRoomRsp);
    }
    if (leaveRoomRsp_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(LeaveRoomRsp);
    }
    if (roomMessageRsp_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(RoomMessageRsp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RoomId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(RoomId);
    }
    if (PlayerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
    }
    if (enterRoomRsp_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnterRoomRsp);
    }
    if (leaveRoomRsp_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveRoomRsp);
    }
    if (roomMessageRsp_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoomMessageRsp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RspBody other) {
    if (other == null) {
      return;
    }
    if (other.RoomId.Length != 0) {
      RoomId = other.RoomId;
    }
    if (other.PlayerId.Length != 0) {
      PlayerId = other.PlayerId;
    }
    if (other.enterRoomRsp_ != null) {
      if (enterRoomRsp_ == null) {
        enterRoomRsp_ = new global::EnterRoomRsp();
      }
      EnterRoomRsp.MergeFrom(other.EnterRoomRsp);
    }
    if (other.leaveRoomRsp_ != null) {
      if (leaveRoomRsp_ == null) {
        leaveRoomRsp_ = new global::LeaveRoomRsp();
      }
      LeaveRoomRsp.MergeFrom(other.LeaveRoomRsp);
    }
    if (other.roomMessageRsp_ != null) {
      if (roomMessageRsp_ == null) {
        roomMessageRsp_ = new global::RoomMessageRsp();
      }
      RoomMessageRsp.MergeFrom(other.RoomMessageRsp);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          RoomId = input.ReadString();
          break;
        }
        case 18: {
          PlayerId = input.ReadString();
          break;
        }
        case 26: {
          if (enterRoomRsp_ == null) {
            enterRoomRsp_ = new global::EnterRoomRsp();
          }
          input.ReadMessage(enterRoomRsp_);
          break;
        }
        case 34: {
          if (leaveRoomRsp_ == null) {
            leaveRoomRsp_ = new global::LeaveRoomRsp();
          }
          input.ReadMessage(leaveRoomRsp_);
          break;
        }
        case 42: {
          if (roomMessageRsp_ == null) {
            roomMessageRsp_ = new global::RoomMessageRsp();
          }
          input.ReadMessage(roomMessageRsp_);
          break;
        }
      }
    }
  }

}

public sealed partial class Server2ClientRsp : pb::IMessage<Server2ClientRsp> {
  private static readonly pb::MessageParser<Server2ClientRsp> _parser = new pb::MessageParser<Server2ClientRsp>(() => new Server2ClientRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Server2ClientRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientRsp(Server2ClientRsp other) : this() {
    seq_ = other.seq_;
    cmd_ = other.cmd_;
    code_ = other.code_;
    msg_ = other.msg_;
    body_ = other.body_ != null ? other.body_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientRsp Clone() {
    return new Server2ClientRsp(this);
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 1;
  private string seq_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Seq {
    get { return seq_; }
    set {
      seq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 2;
  private global::Client2ServerReqCmd cmd_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Client2ServerReqCmd Cmd {
    get { return cmd_; }
    set {
      cmd_ = value;
    }
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 3;
  private int code_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Code {
    get { return code_; }
    set {
      code_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 4;
  private string msg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 5;
  private global::RspBody body_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RspBody Body {
    get { return body_; }
    set {
      body_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Server2ClientRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Server2ClientRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Seq != other.Seq) return false;
    if (Cmd != other.Cmd) return false;
    if (Code != other.Code) return false;
    if (Msg != other.Msg) return false;
    if (!object.Equals(Body, other.Body)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Seq.Length != 0) hash ^= Seq.GetHashCode();
    if (Cmd != 0) hash ^= Cmd.GetHashCode();
    if (Code != 0) hash ^= Code.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    if (body_ != null) hash ^= Body.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Seq.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Seq);
    }
    if (Cmd != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Cmd);
    }
    if (Code != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Code);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Msg);
    }
    if (body_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(Body);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Seq.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Seq);
    }
    if (Cmd != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Cmd);
    }
    if (Code != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    if (body_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Server2ClientRsp other) {
    if (other == null) {
      return;
    }
    if (other.Seq.Length != 0) {
      Seq = other.Seq;
    }
    if (other.Cmd != 0) {
      Cmd = other.Cmd;
    }
    if (other.Code != 0) {
      Code = other.Code;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    if (other.body_ != null) {
      if (body_ == null) {
        body_ = new global::RspBody();
      }
      Body.MergeFrom(other.Body);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Seq = input.ReadString();
          break;
        }
        case 16: {
          cmd_ = (global::Client2ServerReqCmd) input.ReadEnum();
          break;
        }
        case 24: {
          Code = input.ReadInt32();
          break;
        }
        case 34: {
          Msg = input.ReadString();
          break;
        }
        case 42: {
          if (body_ == null) {
            body_ = new global::RspBody();
          }
          input.ReadMessage(body_);
          break;
        }
      }
    }
  }

}

/// <summary>
/// Broadcast
/// </summary>
public sealed partial class Frames : pb::IMessage<Frames> {
  private static readonly pb::MessageParser<Frames> _parser = new pb::MessageParser<Frames>(() => new Frames());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Frames> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frames() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frames(Frames other) : this() {
    frames_ = other.frames_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Frames Clone() {
    return new Frames(this);
  }

  /// <summary>Field number for the "frames" field.</summary>
  public const int Frames_FieldNumber = 1;
  private static readonly pb::FieldCodec<global::Frame> _repeated_frames_codec
      = pb::FieldCodec.ForMessage(10, global::Frame.Parser);
  private readonly pbc::RepeatedField<global::Frame> frames_ = new pbc::RepeatedField<global::Frame>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::Frame> Frames_ {
    get { return frames_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Frames);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Frames other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!frames_.Equals(other.frames_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= frames_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    frames_.WriteTo(output, _repeated_frames_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += frames_.CalculateSize(_repeated_frames_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Frames other) {
    if (other == null) {
      return;
    }
    frames_.Add(other.frames_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          frames_.AddEntriesFrom(input, _repeated_frames_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class BstBody : pb::IMessage<BstBody> {
  private static readonly pb::MessageParser<BstBody> _parser = new pb::MessageParser<BstBody>(() => new BstBody());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BstBody> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BstBody() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BstBody(BstBody other) : this() {
    fromPlayerId_ = other.fromPlayerId_;
    frames_ = other.frames_ != null ? other.frames_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BstBody Clone() {
    return new BstBody(this);
  }

  /// <summary>Field number for the "fromPlayerId" field.</summary>
  public const int FromPlayerIdFieldNumber = 1;
  private string fromPlayerId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string FromPlayerId {
    get { return fromPlayerId_; }
    set {
      fromPlayerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "frames" field.</summary>
  public const int FramesFieldNumber = 2;
  private global::Frames frames_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Frames Frames {
    get { return frames_; }
    set {
      frames_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BstBody);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BstBody other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (FromPlayerId != other.FromPlayerId) return false;
    if (!object.Equals(Frames, other.Frames)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (FromPlayerId.Length != 0) hash ^= FromPlayerId.GetHashCode();
    if (frames_ != null) hash ^= Frames.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (FromPlayerId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(FromPlayerId);
    }
    if (frames_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Frames);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (FromPlayerId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FromPlayerId);
    }
    if (frames_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Frames);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BstBody other) {
    if (other == null) {
      return;
    }
    if (other.FromPlayerId.Length != 0) {
      FromPlayerId = other.FromPlayerId;
    }
    if (other.frames_ != null) {
      if (frames_ == null) {
        frames_ = new global::Frames();
      }
      Frames.MergeFrom(other.Frames);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          FromPlayerId = input.ReadString();
          break;
        }
        case 18: {
          if (frames_ == null) {
            frames_ = new global::Frames();
          }
          input.ReadMessage(frames_);
          break;
        }
      }
    }
  }

}

public sealed partial class Server2ClientBst : pb::IMessage<Server2ClientBst> {
  private static readonly pb::MessageParser<Server2ClientBst> _parser = new pb::MessageParser<Server2ClientBst>(() => new Server2ClientBst());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Server2ClientBst> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientBst() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientBst(Server2ClientBst other) : this() {
    type_ = other.type_;
    seq_ = other.seq_;
    body_ = other.body_ != null ? other.body_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Server2ClientBst Clone() {
    return new Server2ClientBst(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private global::Server2ClientBstType type_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Server2ClientBstType Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  /// <summary>Field number for the "seq" field.</summary>
  public const int SeqFieldNumber = 2;
  private string seq_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Seq {
    get { return seq_; }
    set {
      seq_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "body" field.</summary>
  public const int BodyFieldNumber = 3;
  private global::BstBody body_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::BstBody Body {
    get { return body_; }
    set {
      body_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Server2ClientBst);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Server2ClientBst other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Seq != other.Seq) return false;
    if (!object.Equals(Body, other.Body)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type != 0) hash ^= Type.GetHashCode();
    if (Seq.Length != 0) hash ^= Seq.GetHashCode();
    if (body_ != null) hash ^= Body.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (Seq.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Seq);
    }
    if (body_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Body);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (Seq.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Seq);
    }
    if (body_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Server2ClientBst other) {
    if (other == null) {
      return;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    if (other.Seq.Length != 0) {
      Seq = other.Seq;
    }
    if (other.body_ != null) {
      if (body_ == null) {
        body_ = new global::BstBody();
      }
      Body.MergeFrom(other.Body);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type_ = (global::Server2ClientBstType) input.ReadEnum();
          break;
        }
        case 18: {
          Seq = input.ReadString();
          break;
        }
        case 26: {
          if (body_ == null) {
            body_ = new global::BstBody();
          }
          input.ReadMessage(body_);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
